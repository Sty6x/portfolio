---
import Layout from "../layouts/Layout.astro";
import ToBtn from "../components/ToBtn.astro";

const featuredProjects = [
	{title: "Vimnotes", color: "#5C64BD"},
	{title: "Warframe Cli Tool", color: "#BD706F"},
	{title: "Website Time Tracker", color: "#5394BD"},
];
---

<Layout title="project">
	<main id="projects-container">
	<div id="navigate-back-container">
		<ToBtn link="/" />
	</div>  
	{featuredProjects.map((project) => {
		return (
			<div class="projects inactive" id={project.title}>
				<div>Logo</div>
				<div class="project-title">
					<h1>{project.title}</h1>
					<span
						style={{backgroundColor: project.color}}
						class="title-underline"
                        />
				</div>
				<p>A Keyboard oriented markdown note taking app using vim key bindings.</p>
				<div id={`link-to-${project.title}`} class="link-to-proj">
					<a>Visit {project.title}</a>
				</div>
			</div>
		);
	})}
	</main>
</Layout>


<script>
	import gsap from "gsap"
	const projectList = document.querySelectorAll(".projects");

	gsap.from(".projects",{
		y:100,
		opacity:0,
		stagger:0.5,
		duration:.6
	})

	gsap.to(".projects",{
		y:0,
		opacity:1,
		stagger:0.5,
		duration:.6
	})

</script>

<style>
	#projects-container {
		overflow: hidden;
		display: flex;
		flex: 1;
		& > div {
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			width: 100%;
			outline: var(--medium-shade) 1px solid;
		}
	}
	.projects {
		color: var(--text);
		padding: 0 3em;
		& > div {
			display: flex;
			flex-direction: column;
			box-sizing: content-box;
			& > h1 {
				font-size: 2rem;
				font-weight: 600;
			}
			& > .title-underline {
				display: inline-block;
				width: 50px;
				height: 5px;
				align-self: start;
				transition: width 150ms ease-in-out;
			}
		}
		& > p {
			text-align: center;
			font-weight: 500;
			font-size: 1.3rem;
			margin-top: .8em;
		}
	}

	#navigate-back-container {
		transform: rotate(180deg);
	}

	body:has(.projects):hover {
		background-image: none;
	}

	.projects:hover {
		& > :not(:first-child) >span.title-underline  {
			width: 100%;
			transition: width 200ms ease-in-out;
		}
		background-image: var(--gradient-iso);
		cursor: pointer;
 	 	& > * {
			display: inline-block !important;
		}
	}
 	 .inactive > :not(div:nth-child(3n-1)) {
		/* appearance: none; */
		display: none;
	}

</style>
