---
import Layout from "../layouts/Layout.astro";
import ToBtn from "../components/ToBtn.astro";

const featuredProjects = [
	{title: "Vimnotes", color: "#5C64BD"},
	{title: "Warframe Cli Tool", color: "#BD706F"},
	{title: "Website Time Tracker", color: "#5394BD"},
];
---

<Layout title="project">
	<main id="projects-container">
		<div id="navigate-back-container">
			<ToBtn link="/" />
		</div>
		{
			featuredProjects.map((project) => {
				return (
					<div class="projects" id={project.title}>
						<div class={`${project.title}-info project-logo inactive `}>
							Logo
						</div>
						<div class="project-title">
							<h1>{project.title}</h1>
							<span
								style={{backgroundColor: project.color}}
								class="title-underline"
							/>
						</div>
						<p class={`${project.title}-desc project-desc inactive `}>
							A Keyboard oriented markdown note taking app using vim key
							bindings.
						</p>
						<div
							id={`link-to-${project.title}`}
							class={`${project.title}-link project-link inactive`}>
							<a>Visit {project.title}</a>
						</div>
					</div>
				);
			})
		}
	</main>
</Layout>

<script>
	import gsap from "gsap";
	const projectList = document.querySelectorAll(".projects");

	gsap.from(".projects", {
		y: 100,
		opacity: 0,
		stagger: 0.5,
		duration: 0.6,
	});

	gsap.to(".projects", {
		y: 0,
		opacity: 1,
		stagger: 0.5,
		duration: 0.6,
	});

	projectList.forEach((project) => {
		// first project event listener is not applying gsap stagger animation
		project.addEventListener("mouseenter", () => {
					const chm = Array.from(project.children).map((c) => {
				if (c.classList.contains("inactive")) {
					c.classList.replace("inactive", "active");
					return c;
				}
				return c;
			});
			const ch = chm.filter((c) => !c.classList.contains("inactive"));
			console.log(ch);
			gsap.from(ch, {
				y: 100,
				opacity: 0,
				stagger: 0.1,
				duration: 0.2,
			});

			gsap.to(ch, {
				y: 0,
				opacity: 1,
				stagger: 0.1,
				duration: 0.2,
			});
		});
		project.addEventListener("mouseleave", () => {
		

			const ch = Array.from(project.children).filter((c) => c.classList.contains("active"));
			console.log(ch)
				gsap.to(ch, {
						y: 50,
						opacity: 0,
						duration:.1
					});

			const chm = Array.from(project.children).map((c) => {
				if (c.classList.contains("active")) {
					c.classList.replace("active", "inactive");
						return c;
					}
						return c;
			});
		});
	});
</script>

<style>
	#projects-container {
		transition: background-color 150ms ease-in-out;
		overflow: hidden;
		display: flex;
		flex: 1;
		& > div {
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			width: 100%;
			outline: var(--medium-shade) 1px solid;
		}
	}
	.projects {
		transition: background-color 150ms ease-in-out;
		color: var(--text);
		padding: 0 3em;
		& > div {
			display: flex;
			flex-direction: column;
			box-sizing: content-box;
			& > h1 {
				font-size: 2rem;
				font-weight: 600;
			}
			& > .title-underline {
				display: inline-block;
				width: 50px;
				height: 5px;
				align-self: start;
				transition: width 150ms ease-in-out;
			}
		}
		& > p {
			text-align: center;
			font-weight: 500;
			font-size: 1.3rem;
			margin-top: 0.8em;
		}
	}
	#navigate-back-container {
		transform: rotate(180deg);
	}
	body:has(.projects:hover) {
		& > main {
			transition: background-color 150ms ease-in-out;
			background-color: var(--bg);
		}
	}

	.projects:hover {
		transition: background-color 150ms ease-in-out;
		& > :not(:first-child) > span.title-underline {
			width: 100%;
			transition: width 200ms ease-in-out;
		}
		background-image: var(--gradient-iso);
		cursor: pointer;
	}
	.inactive {
		opacity: 0;
	}
</style>
