---
import ToBtn from "../components/ToBtn.astro";
import Layout from "../layouts/Layout.astro";
import ProjectLayout from "../layouts/ProjectLayout.astro";
// Import the functions you need from the SDKs you need
---

<ProjectLayout title="Contacts">
	<section id="left">
		<div class="text-content-container">
			<div id="back-btn-container">
				<div id="back-btn">
					<ToBtn link="/projects" />
					<p>Back to projects.</p>
				</div>
			</div>
			<div class="text-content">
				<h1>I'm Free.</h1>
				<h1>Let's chat, work together</h1>
				<h1>and build things.</h1>
				<p>Get in touch.</p>
			</div>
			<div id="mail-box">
				<div id="mail-text-container">
					<span id="mail-icon-container">
						<span id="mail-icon"></span>
					</span>
					<span id="mail-text">
						<p>Mail me at</p>
						<p>franzdiaz460@gmail.com</p>
					</span>
				</div>
			</div>
		</div>
	</section>
	<section id="right">
		<span id="pop-up-notification" class="inactive">
			<p id="pop-up-text"></p>
			<span id="pop-up-icon" class="on-success"></span>
		</span>
		<form>
			<h2>Send me a message.</h2>
			<div id="name" class="inputs">
				<input
					class="input"
					type="text"
					id="name"
					name="name"
					placeholder="Fullname*"
				/>
			</div>
			<div id="email" class="inputs">
				<input
					class="input"
					type="email"
					id="email"
					name="email"
					placeholder="Email address*"
				/>
			</div>
			<div id="subject" class="inputs">
				<input
					class="input"
					type="text"
					id="subject"
					name="subject"
					placeholder="Subject"
				/>
			</div>
			<div id="message" class="inputs">
				<label for="message">Tell me what you think</label>
				<textarea class="input" id="message" name="message"></textarea>
			</div>
			<div id="submit-btn">
				<button class="input" type="submit">Send message</button>
			</div>
		</form>
	</section>
</ProjectLayout>
<script>
	import {initializeApp} from "firebase/app";
	import {getAnalytics} from "firebase/analytics";
	import {
		getFirestore,
		addDoc,
		doc,
		setDoc,
		collection,
	} from "firebase/firestore";
	// TODO: Add SDKs for Firebase products that you want to use
	// https://firebase.google.com/docs/web/setup#available-libraries

	// Your web app's Firebase configuration
	// For Firebase JS SDK v7.20.0 and later, measurementId is optional
	const firebaseConfig = {
		apiKey: "AIzaSyD3IuiWmJ1IrrU0JTd4mii1aHiKzEKv4-Y",
		authDomain: "portfolio-db-b657d.firebaseapp.com",
		projectId: "portfolio-db-b657d",
		storageBucket: "portfolio-db-b657d.appspot.com",
		messagingSenderId: "286900560555",
		appId: "1:286900560555:web:c9395eae21709d62918dee",
		measurementId: "G-4DX0NF54Z0",
	};

	// // Initialize Firebase
	const app = initializeApp(firebaseConfig);
	const db = getFirestore(app);
	const form = document.querySelector("form");
	const submitBtn = document.querySelector('button[type="submit"]');
	const inputs = document.querySelectorAll(".input");
	console.log(submitBtn);

	async function sendMessage(inputs) {
		console.log(inputs);
		try {
			const emailsRef = collection(db, "emails");
			// await addDoc(emailsRef, {...inputs});
			setPopUpText("Message sent successfully!");
		} catch (err) {
			console.log(err);
			setPopUpText("Something went wrong, please try again later.");
			throw err;
		}
	}
	async function handleOnSubmit(e) {
		e.preventDefault();
		Array.from(inputs).forEach((child) => {
			child.setAttribute("disabled", "");
		});
		const messageBody = new FormData(form);
		const toPbj = Object.fromEntries(messageBody);
		setTimeout(async () => {
			Array.from(inputs).forEach((child) => {
				child.removeAttribute("disabled");
			});
		}, 2000);
		const data = await sendMessage(toPbj);
	}

	async function setPopUpText(text) {
		const popUpText = document.getElementById("pop-up-text");
		popUpText.textContent = text;
		showPopUp();
	}
	function showPopUp() {
		const popUp = document.getElementById("pop-up-notification");
		if (popUp.classList.contains("inactive")) {
			popUp.classList.replace("inactive", "active");
		}

		setTimeout(() => {
			popUp.classList.replace("active", "inactive");
		}, 2000);
	}

	form.addEventListener("submit", handleOnSubmit);
</script>
<style>
	@keyframes pop-up-show {
		from {
			top: -20%;
		}
		to {
			opacity: 1;
			top: 10%;
		}
	}

	@keyframes pop-up-hide {
		from {
			opacity: 1;
			top: 10%;
		}
		to {
			opacity: 0;
			top: -20%;
		}
	}

	#pop-up-notification {
		z-index: 10;
		opacity: 0;
		position: absolute;
		padding: 1em 2em;
		font-size: 0.9rem;
		background-color: var(--bg);
		border: 1px solid var(--lighter-shade);
		border-radius: 5px;
		display: flex;
		align-items: center;
		justify-content: space-between;
		gap: 0.9em;
		box-shadow: 3px 3px 15px 3px rgba(0, 0, 0, 0.6);
	}
	#pop-up-icon {
		width: 25px;
		height: 25px;
		background-position: center;
		background-repeat: no-repeat;
	}
	.on-success {
		background-image: url("../assets/icons/success.svg");
	}

	.on-error {
		background-image: url("../assets/icons/error.svg");
	}

	.active {
		animation: pop-up-show 200ms forwards normal ease-in-out;
	}

	.inactive {
		animation: pop-up-hide 200ms forwards normal ease-in-out;
	}

	section {
		flex: 1;
		height: 100%;
	}
	#left {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		min-height: 0vh;
	}
	#right {
		position: relative;
		display: flex;
		align-items: center;
		justify-content: center;
	}
	.text-content {
		position: relative;
		margin-top: 1em;
		& > h1 {
			margin-left: 0.3em;
			font-weight: 600;
			font-size: clamp(0.8rem, 1vw + 1.8rem, 3.5rem);
		}
		& > p {
			margin-left: 1em;
			color: grey;
			font-weight: 400;
			font-size: 1.2rem;
		}
	}
	#back-btn {
		display: flex;
		align-items: center;
		gap: 1em;
		#to-btn {
			transform: rotate(180deg);
		}
	}
	.text-content::after {
		content: "";
		display: block;
		position: absolute;
		top: 0;
		width: 105%;
		height: 100%;
		background-color: var(--bg);
		z-index: 10;
		/* left: -2%; */
		animation: text-cover 700ms 450ms ease-in-out forwards normal;
		transform: rotate(180deg);
	}
	#mail-box {
		opacity: 0;
		animation: reveal-y forwards normal 400ms 200ms ease-in-out;
		position: relative;
		margin-top: 1em;
		padding: 1em 2em;
		width: min-content;
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: var(--lighter-shade);
		border-radius: 5px;
	}
	#mail-text-container {
		gap: 1em;
		display: flex;
		align-items: center;
	}
	#mail-text {
		font-weight: 600;
	}
	#mail-text > :last-child {
		color: var(--accent1);
	}
	#mail-icon-container {
		width: 100%;
		height: 100%;
		background-color: var(--light-shade);
		padding: 0.5em;
		border-radius: 5px;
		& > :first-child {
			display: flex;
			align-items: center;
			justify-content: center;
			width: 30px;
			height: 30px;
			background-image: url("../assets/icons/mail.svg");
		}
	}

	#right > form {
		transition: all 200ms ease-in-out;
		padding: 3em;
		border: 2px solid var(--lighter-shade);
		max-height: 80%;
		width: calc(60% + 6em);
		min-width: 500px;
		border-radius: 5px;
		& > h2 {
			font-weight: 600;
			font-size: 2rem;
			margin-bottom: 1em;
		}
	}

	form:has(.input:disabled) {
		transition: all 200ms ease-in-out;
		filter: blur(5px);
		opacity: 0.5;
	}

	.inputs {
		& > * {
			appearance: none;
			width: 100%;
			border-radius: 5px;
			display: block;
		}
		&:not(:last-child) {
			margin-bottom: 2em;
		}
		& > textarea {
			margin-top: 0.5em;
			min-height: 100px;
			max-height: 150px;
		}
	}

	input,
	textarea {
		font-size: 1rem;
		padding: 0.6em 1em;
		transition: outline 200ms ease-in-out;
		outline: 1px solid transparent;
	}
	input,
	textarea {
		background-color: var(--lighter-shade);
	}
	input:focus,
	textarea:focus {
		outline: 1px solid var(--accent1);
		border: none;
		transition: outline 200ms ease-in-out;
	}
	input::placeholder {
		color: var(--light-shade);
	}
	#submit-btn {
		& > button {
			background-color: var(--accent1);
			color: var(--bg);
			font-weight: 600;
			border-radius: 3px;
			padding: 0.6em 1em;
			transition: background-color ease-in-out 200ms;
		}
	}

	#submit-btn {
		& > button:disabled {
			transition: background-color ease-in-out 200ms;
			background-color: #a3dfd580;
		}
	}

	@media (max-width: 1024px) {
		#left {
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			min-height: 0vh;
		}
		#right {
			display: flex;
			align-items: center;
			justify-content: center;
		}
		.text-content {
			& > h1 {
				font-size: clamp(0.8rem, 1vw + 2rem, 3.5rem);
			}
			& > p {
				font-size: 1.2rem;
			}
		}
		.text-content-container,
		.text-content {
			width: 100%;
		}
		#right > form {
			height: 80%;
			width: 100%;
			min-width: 400px;
			border-radius: 5px;
			& > h2 {
				font-weight: 600;
				font-size: clamp(0.8rem, 1vw + 1.3rem, 2rem);
				margin-bottom: 1em;
			}
		}
	}

	@media (max-width: 500px) {
		#mail-box {
			/* display: none; */
		}
		.text-content-container,
		.text-content {
			width: 100%;
		}
		.text-content {
			& > h1 {
				font-size: clamp(0.8rem, 1vw + 1.5rem, 3.5rem);
			}
			& > p {
				font-size: 1.2rem;
			}
		}
	}
</style>
